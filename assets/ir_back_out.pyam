Gg(0)	 # Number of global vars

RingRing(tmp0, main)	 # call main
	Gnoming(arg0, tmp0)	 # Assigning tmp to arg

	Bobb(tmp1, hlt, 1)	 # System function call: "hlt"

Gyat(main, 0, 3)	 # implement main
	Gnoming(tmp2, 0 )	 # Assigning number to tmp
	Gnoming(var0, tmp2)	 # Variable: 

	Bobb(tmp3, in, 0)	 # System function call: "in"
	Gnoming(var0, tmp3)	 # Variable: IN arg
	Gnoming(tmp4, var0)	 # 
	Gnoming(arg0, tmp4)	 # Assigning tmp to arg

	Bobb(tmp5, out, 1)	 # System function call: "out"
	Gnoming(tmp6, 0 )	 # Assigning number to tmp
	Gnoming(var1, tmp6)	 # Variable: 

Viperr(label0)	 # start condition WHILE
	Gnoming(tmp7, var1)	 # 
	Gnoming(tmp8, var0)	 # 
	Digging(tmp9, 7, tmp7, tmp8)	 # IR_OP_TYPE_LESS

Frog(label1, tmp9)	 # second check WHILE condition, jmp to body
Frog(label2, 1)	 # jmp to end

Viperr(label1)	 # start body WHILE
	Gnoming(tmp10, var1)	 # 
	Gnoming(arg0, tmp10)	 # Assigning tmp to arg

RingRing(tmp11, func_3_1)	 # 

	Gnoming(var2, tmp11)	 # Variable: 
	Gnoming(tmp12, var2)	 # 
	Gnoming(arg0, tmp12)	 # Assigning tmp to arg

	Bobb(tmp13, out, 1)	 # System function call: "out"
	Gnoming(tmp14, 1 )	 # Assigning number to tmp
	Gnoming(tmp15, var1)	 # 
	Digging(tmp16, 1, tmp15, tmp14)	 # IR_OP_TYPE_SUM

	Gnoming(var1, tmp16)	 # Variable: 
Frog(label0, 1)	 # jump to condition WHILE

Viperr(label2)	 # end WHILE
	Gnoming(tmp17, 0 )	 # Assigning number to tmp

	Cherepovec(tmp17)	 # Return with ret val in tmp17

Gyat(func_3_1, 1, 1)	 # 
	Gnoming(var0, arg0)	 # Variable: 
	Gnoming(tmp18, var0)	 # 
	Gnoming(tmp19, 1 )	 # Assigning number to tmp
	Digging(tmp20, 5, tmp18, tmp19)	 # IR_OP_TYPE_EQ

Frog(label4, tmp20)	 # check IF condition, jmp after else
Frog(label3, 1)	 # jmp to else in IF

Viperr(label4)	 # label not else in IF
	Gnoming(tmp21, 1 )	 # Assigning number to tmp

	Cherepovec(tmp21)	 # Return with ret val in tmp21

Viperr(label3)	 # label else for IF
	Gnoming(tmp22, var0)	 # 
	Gnoming(tmp23, 0 )	 # Assigning number to tmp
	Digging(tmp24, 5, tmp22, tmp23)	 # IR_OP_TYPE_EQ

Frog(label6, tmp24)	 # check IF condition, jmp after else
Frog(label5, 1)	 # jmp to else in IF

Viperr(label6)	 # label not else in IF
	Gnoming(tmp25, 1 )	 # Assigning number to tmp

	Cherepovec(tmp25)	 # Return with ret val in tmp25

Viperr(label5)	 # label else for IF
	Gnoming(tmp26, var0)	 # 
	Gnoming(tmp27, 1 )	 # Assigning number to tmp
	Digging(tmp28, 2, tmp26, tmp27)	 # IR_OP_TYPE_SUB

	Gnoming(arg0, tmp28)	 # Assigning tmp to arg

RingRing(tmp29, func_3_1)	 # 

	Gnoming(tmp30, var0)	 # 
	Digging(tmp31, 3, tmp29, tmp30)	 # IR_OP_TYPE_MUL


	Cherepovec(tmp31)	 # Return with ret val in tmp31

Gyat(func_5_1, 1, 1)	 # 
	Gnoming(var0, arg0)	 # Variable: 
	Gnoming(tmp32, var0)	 # 
	Gnoming(tmp33, 1 )	 # Assigning number to tmp
	Digging(tmp34, 5, tmp32, tmp33)	 # IR_OP_TYPE_EQ

Frog(label8, tmp34)	 # check IF condition, jmp after else
Frog(label7, 1)	 # jmp to else in IF

Viperr(label8)	 # label not else in IF
	Gnoming(tmp35, 1 )	 # Assigning number to tmp

	Cherepovec(tmp35)	 # Return with ret val in tmp35

Viperr(label7)	 # label else for IF
	Gnoming(tmp36, var0)	 # 
	Gnoming(tmp37, 0 )	 # Assigning number to tmp
	Digging(tmp38, 5, tmp36, tmp37)	 # IR_OP_TYPE_EQ

Frog(label10, tmp38)	 # check IF condition, jmp after else
Frog(label9, 1)	 # jmp to else in IF

Viperr(label10)	 # label not else in IF
	Gnoming(tmp39, 0 )	 # Assigning number to tmp

	Cherepovec(tmp39)	 # Return with ret val in tmp39

Viperr(label9)	 # label else for IF
	Gnoming(tmp40, var0)	 # 
	Gnoming(tmp41, 1 )	 # Assigning number to tmp
	Digging(tmp42, 2, tmp40, tmp41)	 # IR_OP_TYPE_SUB

	Gnoming(arg0, tmp42)	 # Assigning tmp to arg

RingRing(tmp43, func_5_1)	 # 

	Gnoming(tmp44, var0)	 # 
	Gnoming(tmp45, 2 )	 # Assigning number to tmp
	Digging(tmp46, 2, tmp44, tmp45)	 # IR_OP_TYPE_SUB

	Gnoming(arg0, tmp46)	 # Assigning tmp to arg

RingRing(tmp47, func_5_1)	 # 

	Digging(tmp48, 1, tmp43, tmp47)	 # IR_OP_TYPE_SUM


	Cherepovec(tmp48)	 # Return with ret val in tmp48
