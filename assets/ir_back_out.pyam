Gg(0)	 # Number of global vars

RingRing(tmp0, main)	 # call main
	Gnoming(arg0, tmp0)	 # Assigning tmp to arg

	Bobb(tmp1, hlt, 1)	 # System function call: "hlt"

Gyat(main, 0, 3)	 # implement main
	Gnoming(tmp2, 10 )	 # Assigning number to tmp
	Gnoming(var0, tmp2)	 # Variable: 
	Gnoming(tmp3, var0)	 # 
	Gnoming(arg1, tmp3)	 # Assigning tmp to arg

	Bobb(tmp4, out, 1)	 # System function call: "out"
	Gnoming(tmp5, var0)	 # 
	Gnoming(arg2, tmp5)	 # Assigning tmp to arg

RingRing(tmp6, func_2_1)	 # 

	Gnoming(var1, tmp6)	 # Variable: 
	Gnoming(tmp7, var1)	 # 
	Gnoming(arg1, tmp7)	 # Assigning tmp to arg

	Bobb(tmp8, out, 1)	 # System function call: "out"
	Gnoming(tmp9, var0)	 # 
	Gnoming(arg3, tmp9)	 # Assigning tmp to arg

RingRing(tmp10, func_4_1)	 # 

	Gnoming(var2, tmp10)	 # Variable: 
	Gnoming(tmp11, var2)	 # 
	Gnoming(arg1, tmp11)	 # Assigning tmp to arg

	Bobb(tmp12, out, 1)	 # System function call: "out"
	Gnoming(tmp13, 0 )	 # Assigning number to tmp

	Cherepovec(tmp13)	 # Return with ret val in tmp13

Gyat(func_2_1, 1, 1)	 # 
	Gnoming(var0, arg2)	 # Variable: 
	Gnoming(tmp14, var0)	 # 
	Gnoming(tmp15, 1 )	 # Assigning number to tmp
	Digging(tmp16, 5, tmp14, tmp15)	 # IR_OP_TYPE_EQ

Frog(label1, tmp16)	 # check IF condition, jmp after else
Frog(label0, 1)	 # jmp to else in IF

Viperr(label1)	 # label not else in IF
	Gnoming(tmp17, 1 )	 # Assigning number to tmp

	Cherepovec(tmp17)	 # Return with ret val in tmp17

Viperr(label0)	 # label else for IF
	Gnoming(tmp18, var0)	 # 
	Gnoming(tmp19, 1 )	 # Assigning number to tmp
	Digging(tmp20, 2, tmp18, tmp19)	 # IR_OP_TYPE_SUB

	Gnoming(arg2, tmp20)	 # Assigning tmp to arg

RingRing(tmp21, func_2_1)	 # 

	Gnoming(tmp22, var0)	 # 
	Digging(tmp23, 3, tmp21, tmp22)	 # IR_OP_TYPE_MUL


	Cherepovec(tmp23)	 # Return with ret val in tmp23

Gyat(func_4_1, 1, 1)	 # 
	Gnoming(var0, arg3)	 # Variable: 
	Gnoming(tmp24, var0)	 # 
	Gnoming(tmp25, 1 )	 # Assigning number to tmp
	Digging(tmp26, 5, tmp24, tmp25)	 # IR_OP_TYPE_EQ

Frog(label3, tmp26)	 # check IF condition, jmp after else
Frog(label2, 1)	 # jmp to else in IF

Viperr(label3)	 # label not else in IF
	Gnoming(tmp27, 1 )	 # Assigning number to tmp

	Cherepovec(tmp27)	 # Return with ret val in tmp27

Viperr(label2)	 # label else for IF
	Gnoming(tmp28, var0)	 # 
	Gnoming(tmp29, 0 )	 # Assigning number to tmp
	Digging(tmp30, 5, tmp28, tmp29)	 # IR_OP_TYPE_EQ

Frog(label5, tmp30)	 # check IF condition, jmp after else
Frog(label4, 1)	 # jmp to else in IF

Viperr(label5)	 # label not else in IF
	Gnoming(tmp31, 0 )	 # Assigning number to tmp

	Cherepovec(tmp31)	 # Return with ret val in tmp31

Viperr(label4)	 # label else for IF
	Gnoming(tmp32, var0)	 # 
	Gnoming(tmp33, 1 )	 # Assigning number to tmp
	Digging(tmp34, 2, tmp32, tmp33)	 # IR_OP_TYPE_SUB

	Gnoming(arg3, tmp34)	 # Assigning tmp to arg

RingRing(tmp35, func_4_1)	 # 

	Gnoming(tmp36, var0)	 # 
	Gnoming(tmp37, 2 )	 # Assigning number to tmp
	Digging(tmp38, 2, tmp36, tmp37)	 # IR_OP_TYPE_SUB

	Gnoming(arg3, tmp38)	 # Assigning tmp to arg

RingRing(tmp39, func_4_1)	 # 

	Digging(tmp40, 1, tmp35, tmp39)	 # IR_OP_TYPE_SUM


	Cherepovec(tmp40)	 # Return with ret val in tmp40
