Gg(0)	 # Number of global vars

RingRing(tmp0, main)	 # call main
	Gnoming(arg0, tmp0)	 # Assigning tmp to arg

	Bobb(tmp1, hlt, 1)	 # System function call: "hlt"

Gyat(main, 0, 2)	 # implement main
	Gnoming(tmp2, 0 )	 # Assigning number to tmp
	Gnoming(var0, tmp2)	 # Variable: 

	Bobb(tmp3, in, 0)	 # System function call: "in"
	Gnoming(var0, tmp3)	 # Variable: IN arg
	Gnoming(tmp4, 0 )	 # Assigning number to tmp
	Gnoming(var1, tmp4)	 # Variable: 
	Gnoming(tmp5, var0)	 # 
	Gnoming(tmp6, var1)	 # 
	Digging(tmp7, 10, tmp5, tmp6)	 # IR_OP_TYPE_GREATEQ

Frog(label1, tmp7)	 # first check WHILE condition, jump to body WHILE
Frog(label3, 1)	 # jmp to else WHILE

Viperr(label0)	 # start condition WHILE
	Gnoming(tmp8, var0)	 # 
	Gnoming(tmp9, var1)	 # 
	Digging(tmp10, 10, tmp8, tmp9)	 # IR_OP_TYPE_GREATEQ

Frog(label1, tmp10)	 # second check WHILE condition, jmp to body
Frog(label2, 1)	 # jmp to end

Viperr(label1)	 # start body WHILE
	Gnoming(tmp11, var1)	 # 
	Gnoming(arg0, tmp11)	 # Assigning tmp to arg

RingRing(tmp12, func_2_1)	 # 

	Gnoming(arg0, tmp12)	 # Assigning tmp to arg

	Bobb(tmp13, out, 1)	 # System function call: "out"
	Gnoming(tmp14, 1 )	 # Assigning number to tmp
	Gnoming(tmp15, var1)	 # 
	Digging(tmp16, 1, tmp15, tmp14)	 # IR_OP_TYPE_SUM

	Gnoming(var1, tmp16)	 # Variable: 
Frog(label0, 1)	 # jump to condition WHILE

Viperr(label3)	 # start else WHILE
	Gnoming(tmp17, 228 )	 # Assigning number to tmp

	Cherepovec(tmp17)	 # Return with ret val in tmp17

Viperr(label2)	 # end WHILE
	Gnoming(tmp18, 0 )	 # Assigning number to tmp

	Cherepovec(tmp18)	 # Return with ret val in tmp18

Gyat(func_2_1, 1, 1)	 # 
	Gnoming(var0, arg0)	 # Variable: 
	Gnoming(tmp19, var0)	 # 
	Gnoming(tmp20, 1 )	 # Assigning number to tmp
	Digging(tmp21, 5, tmp19, tmp20)	 # IR_OP_TYPE_EQ

Frog(label5, tmp21)	 # check IF condition, jmp after else
Frog(label4, 1)	 # jmp to else in IF

Viperr(label5)	 # label not else in IF
	Gnoming(tmp22, 1 )	 # Assigning number to tmp

	Cherepovec(tmp22)	 # Return with ret val in tmp22

Viperr(label4)	 # label else for IF
	Gnoming(tmp23, var0)	 # 
	Gnoming(tmp24, 0 )	 # Assigning number to tmp
	Digging(tmp25, 5, tmp23, tmp24)	 # IR_OP_TYPE_EQ

Frog(label7, tmp25)	 # check IF condition, jmp after else
Frog(label6, 1)	 # jmp to else in IF

Viperr(label7)	 # label not else in IF
	Gnoming(tmp26, 1 )	 # Assigning number to tmp

	Cherepovec(tmp26)	 # Return with ret val in tmp26

Viperr(label6)	 # label else for IF
	Gnoming(tmp27, var0)	 # 
	Gnoming(tmp28, 1 )	 # Assigning number to tmp
	Digging(tmp29, 2, tmp27, tmp28)	 # IR_OP_TYPE_SUB

	Gnoming(arg0, tmp29)	 # Assigning tmp to arg

RingRing(tmp30, func_2_1)	 # 

	Gnoming(tmp31, var0)	 # 
	Digging(tmp32, 3, tmp30, tmp31)	 # IR_OP_TYPE_MUL


	Cherepovec(tmp32)	 # Return with ret val in tmp32

Gyat(func_4_1, 1, 1)	 # 
	Gnoming(var0, arg0)	 # Variable: 
	Gnoming(tmp33, var0)	 # 
	Gnoming(tmp34, 1 )	 # Assigning number to tmp
	Digging(tmp35, 5, tmp33, tmp34)	 # IR_OP_TYPE_EQ

Frog(label9, tmp35)	 # check IF condition, jmp after else
Frog(label8, 1)	 # jmp to else in IF

Viperr(label9)	 # label not else in IF
	Gnoming(tmp36, 1 )	 # Assigning number to tmp

	Cherepovec(tmp36)	 # Return with ret val in tmp36

Viperr(label8)	 # label else for IF
	Gnoming(tmp37, var0)	 # 
	Gnoming(tmp38, 0 )	 # Assigning number to tmp
	Digging(tmp39, 5, tmp37, tmp38)	 # IR_OP_TYPE_EQ

Frog(label11, tmp39)	 # check IF condition, jmp after else
Frog(label10, 1)	 # jmp to else in IF

Viperr(label11)	 # label not else in IF
	Gnoming(tmp40, 0 )	 # Assigning number to tmp

	Cherepovec(tmp40)	 # Return with ret val in tmp40

Viperr(label10)	 # label else for IF
	Gnoming(tmp41, var0)	 # 
	Gnoming(tmp42, 1 )	 # Assigning number to tmp
	Digging(tmp43, 2, tmp41, tmp42)	 # IR_OP_TYPE_SUB

	Gnoming(arg0, tmp43)	 # Assigning tmp to arg

RingRing(tmp44, func_4_1)	 # 

	Gnoming(tmp45, var0)	 # 
	Gnoming(tmp46, 2 )	 # Assigning number to tmp
	Digging(tmp47, 2, tmp45, tmp46)	 # IR_OP_TYPE_SUB

	Gnoming(arg0, tmp47)	 # Assigning tmp to arg

RingRing(tmp48, func_4_1)	 # 

	Digging(tmp49, 1, tmp44, tmp48)	 # IR_OP_TYPE_SUM


	Cherepovec(tmp49)	 # Return with ret val in tmp49
